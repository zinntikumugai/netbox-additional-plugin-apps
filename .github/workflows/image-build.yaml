name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'docker/**'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'docker/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: netbox-custom
  BASE_VERSION: v4.4.4-3.4.1
  TAG_SUFFIX: -with-plugin

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from Dockerfile
        id: extract-version
        run: |
          # DockerfileからFROMのバージョンを抽出
          FROM_LINE=$(grep "^FROM" docker/netbox-custom/Dockerfile)
          VERSION=$(echo "$FROM_LINE" | sed -n 's/.*netboxcommunity\/netbox:\(v[0-9]\+\.[0-9]\+\.[0-9]\+[^[:space:]]*\).*/\1/p')
          if [ -z "$VERSION" ]; then
            echo "Failed to extract version from Dockerfile"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Get git short hash
        id: git-hash
        run: |
          SHORT_HASH=$(git rev-parse --short HEAD)
          echo "short_hash=$SHORT_HASH" >> $GITHUB_OUTPUT
          echo "Git short hash: $SHORT_HASH"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.extract-version.outputs.version }}${{ env.TAG_SUFFIX }}-${{ steps.git-hash.outputs.short_hash }}
            type=raw,value=${{ steps.extract-version.outputs.version }}${{ env.TAG_SUFFIX }}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=NetBox with additional plugins
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: docker/netbox-custom
          file: docker/netbox-custom/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate summary
        run: |
          echo "## Docker Image Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image Name:** ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "**Base Version:** ${{ steps.extract-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Git Hash:** ${{ steps.git-hash.outputs.short_hash }}" >> $GITHUB_STEP_SUMMARY
          echo "**Final Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "- ${{ steps.extract-version.outputs.version }}${{ env.TAG_SUFFIX }}-${{ steps.git-hash.outputs.short_hash }}" >> $GITHUB_STEP_SUMMARY
          echo "- ${{ steps.extract-version.outputs.version }}${{ env.TAG_SUFFIX }}" >> $GITHUB_STEP_SUMMARY
          echo "- latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ✅ Image built and pushed successfully" >> $GITHUB_STEP_SUMMARY
          echo "**Built Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
