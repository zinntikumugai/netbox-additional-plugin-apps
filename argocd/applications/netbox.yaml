apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: netbox
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: netbox2
  source:
    repoURL: https://charts.netbox.oss.netboxlabs.com/
    chart: netbox
    targetRevision: 7.1.10
    helm:
      releaseName: netbox
      values: |
        global:
          storageClass: truenas-nfs-csi
        
        # --- NetBox コンテナ（プラグインを内包したカスタムイメージを推奨） ---
        image:
          # 例：あなたのレジストリのカスタムイメージ
          registry: ghcr.io
          # repository: netbox-community/netbox
          repository: zinntikumugai/netbox-custom
          tag: "latest"
          pullPolicy: Always
        
        plugins:
          - netbox_diode_plugin
          - netbox_bgp
        pluginsConfig:
          netbox_diode_plugin:
            diode_target_override: "grpc://netbox-diode-ingress-nginx-controller.netbox-diode.svc.cluster.local:80/diode"
            diode_username: "diode"
            netbox_to_diode_client_secret: "0123456789"
          netbox_bgp:
            device_ext_page: "right"
            top_level_menu: false

        # --- Superuser設定（Secret参照） ---
        superuser:
          name: admin
          email: admin@example.com
          # パスワードとSecret Keyは netbox-app-secret から読み込み
          existingSecret: "netbox-app-secret"

        # --- LDAP認証設定 ---
        # 事前準備: argocd/applications/netbox-app-secret.yaml を適用
        #   kubectl apply -f argocd/applications/netbox-app-secret.yaml
        remoteAuth:
          enabled: true
          backends:
            - netbox.authentication.LDAPBackend
          autoCreateUser: true
          autoCreateGroups: false
          defaultGroups: []
          groupSyncEnabled: true
          superuserGroups: []
          staffGroups: []

          ldap:
            # LDAPサーバー設定（環境に合わせて変更してください）
            serverUri: "ldap.service.z1n.in:389"
            startTls: false
            ignoreCertErrors: false

            # Bind認証情報
            # bindPasswordは netbox-app-secret の ldap_bind_password キーから自動読み込み
            bindDn: "cn=admin,dc=zin3,dc=cc"

            # ユーザー検索設定
            userSearchBaseDn: "OU=people,DC=zin3,DC=cc"
            # userSearchAttr: "sAMAccountName"  # Active Directoryの場合
            userDnTemplate: "uid=%(user)s,ou=people,dc=zin3,dc=cc"  # 固定DN形式の場合

            # グループ検索設定
            groupSearchBaseDn: "DC=zin3,DC=cc"
            groupSearchClass: "(objectClass=groupOfNames)"  # Active Directoryの場合
            groupType: "GroupOfNamesType"

            # 権限マッピング（必要に応じてコメント解除して設定）
            # requireGroupDn: ["CN=NetBox Users,OU=Groups,DC=example,DC=com"]
            # isAdminDn: ["CN=NetBox Admins,OU=Groups,DC=example,DC=com"]
            # isSuperUserDn: ["CN=NetBox SuperUsers,OU=Groups,DC=example,DC=com"]

            # グループ同期設定
            findGroupPerms: true
            mirrorGroups: true
            mirrorGroupsExcept: []
            cacheTimeout: 3600

            # 属性マッピング
            attrFirstName: "givenName"
            attrLastName: "sn"
            attrMail: "mail"

        # --- PostgreSQL subchart設定（PDB重複回避） ---
        postgresql:
          enabled: true
          # 固有ラベルを全リソースに付与
          commonLabels:
            app.z1n.in/stack: netbox
          # 既存Secretからパスワードを読み込む
          auth:
            existingSecret: "netbox-postgresql-auth"
            secretKeys:
              adminPasswordKey: "postgres-password"
              userPasswordKey: "password"
          primary:
            # Podにも固有ラベルを付与
            podLabels:
              app.z1n.in/stack: netbox
              app.z1n.in/component: postgresql
            # Helmチャートのデフォルトサービスを無効化
            service:
              enabled: false
          # PDB設定（セレクタに固有ラベルを追加）
          pdb:
            create: true
            minAvailable: 1

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
